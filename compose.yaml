services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    networks:
      - tabiten-network

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
      target: development
    container_name: backend
    ports:
      - "9000:9000"
    volumes:
      - ./backend:/var/www
    environment:
      - APP_ENV=local
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=tabiten_development
      - DB_USERNAME=tabiten
      - DB_PASSWORD=tabiten
    user: tabiten
    depends_on:
      - db
    networks:
      - tabiten-network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      target: development
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - tabiten-network

  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=tabiten_development
      - MYSQL_USER=tabiten
      - MYSQL_PASSWORD=tabiten
    command:
      - --default-authentication-plugin=mysql_native_password
    networks:
      - tabiten-network

networks:
  tabiten-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
